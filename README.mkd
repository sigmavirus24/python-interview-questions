# Python Interview Questions

This repository contains a number of Python interview questions that can be 
used when vetting potential candidates. It is not advised to use every one of 
these questions for the same candidate.

## Table of Contents

  1. [General Questions](#general-questions)
  1. [Usage Questions](#usage-questions)
  1. [CSS Questions](#css-questions)
  1. [JS Questions](#js-questions)
  1. [Network Questions](#network-questions)
  1. [Coding Questions](#coding-questions)
  1. [Fun Questions](#fun-questions)


### General Questions:

1. What is Python?

1. Describe some features of Python.

1. How does Python execute code?

1. What are some built-in types in Python?

1. What are bindings, i.e., what does it mean for a value to be bound to a
   variable?

1. What is the recommended way of string concatenation in Python?

1. What is the recommended way of string interpolation in Python?



### Usage Questions:

1. How do you create a list?

1. How do you create a dictionary?

1. What is a list comprehension? Why would you use one?

1. What is a generator? What can it be used for?

1. What is inheritance? 

1. What happens if you have an error in an __init__ statement? 

1. What happens in python if you try to divide by zero?

1. How can you improve the following code?

   ```python
   import string

   i = 0
   for letter in string.letters:
       print("The letter at index %i is %s" % (i, letter))
       i = i + 1
   ```

   Bonus points for mentioning `enumerate` and use of `str.format`.

1. How can you return multiple values from a function/method?

1. What is the meaning of **x and ***y in following code snippet?

   ```python
   def foo(*x, **y):
       pass
   ```
   
1. How to invert key and values in dictionary?

1. What is the difference between range and xrange in Python 2?

1. What is the output of following code snippet?

   ```python
   lst = ['a', 'b', 'c', 'd', 'e']
   print(list[:2:-1])
   ```

### Strategic Questions

1. What's the fastest way to swap the values bound to two variables?

1. What is the importance of reference counting?

1. Do functions (or methods) return something even if there isn't a `return`
   statement? If so, what do they return?

1. How do you reverse a list? Can you come up with at least three ways? 

1. How would you merge two sorted lists? They can be any length, or empty. 

1. How would you count the lines in a file? How would you do it if the file was too big to hold in memory?





